set(CMAKE_SYSTEM_NAME Linux)
if(CMAKE_TARGET_ARCH STREQUAL "armv7")
    set(IS_ARMV7 TRUE)
elseif(CMAKE_TARGET_ARCH STREQUAL "aarch64")
    set(IS_ARM64 TRUE)
endif()

set(TOOLCHAIN_DIR /home/pengcuo/cmake)
if(IS_ARMV7)
    set(CMAKE_C_COMPILER   /home/pengcuo/android-toolchains/armv7-4.8/bin/arm-linux-androideabi-gcc)
    set(CMAKE_CXX_COMPILER   /home/pengcuo/android-toolchains/armv7-4.8/bin/arm-linux-androideabi-g++)
    link_directories(${TOOLCHAIN_DIR}/lib/lib)
elseif(IS_ARM64)
    set(CMAKE_C_COMPILER /home/pengcuo/android-toolchains/android-21/arm64_gnustl/bin/aarch64-linux-android-clang)
    set(CMAKE_CXX_COMPILER /home/pengcuo/android-toolchains/android-21/arm64_gnustl/bin/aarch64-linux-android-clang++)
    link_directories(${TOOLCHAIN_DIR}/lib/lib64)
else()
    link_directories(/usr/local/cuda/lib64)
endif()

set(CMAKE_CXX_FLAGS "-fPIC -fPIE -std=c++11")
message(STATUS "cmake_c_compiler -> ${CMAKE_C_COMPILER}")
message(STATUS "cmake_cxx_compiler -> ${CMAKE_CXX_COMPILER}")
message(STATUS "current_source_dir -> ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "cmake_cxx_flags -> ${CMAKE_CXX_FLAGS}")

include_directories(${TOOLCHAIN_DIR}/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB_RECURSE SRCS ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
